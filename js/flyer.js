// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(["paper"], function(paper) {
    var Flyer, Point, Raster, Size;
    Point = paper.Point, Raster = paper.Raster, Size = paper.Size;
    return Flyer = (function() {

      Flyer.prototype.onPath = true;

      Flyer.prototype.minSpeed = 0.5;

      Flyer.prototype.minXVel = 0.1;

      Flyer.prototype.time = 0;

      Flyer.prototype.timeStep = 1 / 60;

      Flyer.prototype.remTime = 0;

      Flyer.prototype.upAcc = new Point(0, 1);

      Flyer.prototype.downAcc = new Point(0, 5);

      function Flyer(path, imgId) {
        var loadImg,
          _this = this;
        this.path = path;
        this.downHandler = __bind(this.downHandler, this);

        this.upHandler = __bind(this.upHandler, this);

        this.pos = this.path.at(this.path.start);
        this.vel = new Point(this.minSpeed, 0);
        this.acc = this.upAcc;
        loadImg = function() {
          var size;
          _this.raster = new Raster(imgId);
          size = _this.raster.getSize().height;
          if (size > 128) {
            _this.raster.setSize(new Size(128, 128));
            size = 128;
          }
          _this.raster.scale(1 / size);
          return _this.raster.rot = 0;
        };
        if ($("#" + imgId)[0].complete) {
          loadImg();
        } else {
          $("#" + imgId).load(loadImg);
        }
      }

      Flyer.prototype._go = function(dt) {
        var firstX, func, grad, intersection, pathGrad;
        this.vel = this.vel.add(this.acc.multiply(dt));
        this.vel.x = Math.max(this.vel.x, this.minXVel);
        if (this.vel.getLength() < this.minSpeed) {
          this.vel = this.vel.normalize(this.minSpeed);
        }
        if (this.onPath) {
          pathGrad = this.path.grad(this.pos.x);
          if (pathGrad.getDirectedAngle(this.vel) < 0) {
            this.onPath = false;
          } else {
            this.vel = pathGrad.normalize(this.vel.getLength());
            this.pos = this.path.at(this.pos.add(this.vel.multiply(dt)).x);
          }
        }
        if (!this.onPath) {
          firstX = this.pos.x;
          this.pos = this.pos.add(this.vel.multiply(dt));
          func = this.getFunc();
          intersection = this.path.intersect(func.func, func.grad, firstX, this.pos.x, 0.01);
          if (this.pos.y > this.path.at(this.pos.x).y) {
            grad = new Point(1, func.grad(intersection)).normalize();
            pathGrad = this.path.grad(intersection);
            if (grad.getAngle(pathGrad) < 90) {
              this.vel = this.vel.project(this.path.grad(this.pos.x));
            } else {
              this.vel = new Point(0, 0);
            }
            this.pos = this.path.at(this.pos.x);
            this.onPath = true;
          }
        }
        return this.pos;
      };

      Flyer.prototype.go = function(dt) {
        var steps;
        dt += this.remTime;
        steps = 0;
        while (dt >= this.timeStep) {
          this._go(this.timeStep);
          dt -= this.timeStep;
          steps += 1;
        }
        return this.remTime = dt;
      };

      Flyer.prototype.draw = function() {
        var pos, rot;
        if (this.raster) {
          pos = this.getPosition().add(this.vel.rotate(-90).normalize(0.5));
          this.raster.setPosition(pos);
          rot = this.vel.angle - this.raster.rot;
          this.raster.rotate(rot);
          return this.raster.rot += rot;
        }
      };

      Flyer.prototype.getPosition = function() {
        return this.pos.add(this.vel.multiply(this.remTime));
      };

      Flyer.prototype.upHandler = function() {
        return this.acc = this.upAcc;
      };

      Flyer.prototype.downHandler = function() {
        return this.acc = this.downAcc;
      };

      Flyer.prototype.setupControl = function(el) {
        var $el;
        $el = $(el);
        return $el.on({
          "mousedown touchstart": this.downHandler,
          "mouseup touchend": this.upHandler
        });
      };

      Flyer.prototype.finishControl = function(el) {
        var $el;
        $el = $(el);
        return $el.off({
          "mousedown touchstart": this.downHandler,
          "mouseup touchend": this.upHandler
        });
      };

      Flyer.prototype.getFunc = function() {
        var a, b, c, grad;
        a = 1 / (2 * this.vel.x * this.vel.x);
        grad = this.vel.y * (1 / this.vel.x);
        b = grad - a * 2 * this.pos.x;
        c = this.pos.y - a * this.pos.x * this.pos.x - b * this.pos.x;
        return {
          func: function(x) {
            return a * x * x + b * x + c;
          },
          grad: function(x) {
            return 2 * a * x + b;
          }
        };
      };

      return Flyer;

    })();
  });

}).call(this);
