// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["goog", "jquery", "events"], function(goog, $, Events) {
    var Channel;
    return Channel = (function(_super) {

      __extends(Channel, _super);

      function Channel(name, success) {
        var _this = this;
        Channel.__super__.constructor.call(this);
        $.post('/connect', {
          name: name
        }, function(resp) {
          var token, uid;
          if (resp.success) {
            _this.user = resp;
            token = resp.token;
            uid = resp.uid;
            _this.channel = new goog.appengine.Channel(token);
            _this.socket = _this.channel.open();
            _this.socket.onopen = function() {
              return console.log("Socket Opened:", uid);
            };
            _this.socket.onmessage = function(msg) {
              msg = JSON.parse(msg.data);
              console.log("Message:", msg);
              return _this.trigger(msg.type, msg);
            };
            _this.socket.onerror = function(e) {
              return console.error(e.code + ": " + e.description);
            };
            _this.socket.onclose = function() {
              return console.log("Socket Closed");
            };
            if (success) {
              return success(_this.user);
            }
          } else {
            return console.error("Can't connect", resp);
          }
        });
      }

      return Channel;

    })(Events);
  });

}).call(this);
