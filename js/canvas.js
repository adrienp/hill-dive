// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(["paper", "jquery"], function(paper, $) {
    var Canvas, Path, Point;
    Path = paper.Path;
    Point = paper.Point;
    return Canvas = (function() {

      function Canvas(canvasId, path, flyers) {
        var flyer, _i, _len, _ref;
        this.path = path;
        this.flyers = flyers;
        this.resize = __bind(this.resize, this);

        paper.setup(canvasId);
        this.view = paper.view;
        this.$window = $(window);
        this.drawPath = new Path();
        this.drawPath.strokeColor = 'black';
        _ref = this.flyers;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          flyer = _ref[_i];
          flyer.drawPath = new Path.Circle(flyer.pos, 3);
          flyer.drawPath.fillColor = 'red';
        }
        this.resize();
        this.$window.resize(this.resize);
        this.view.draw();
        window.v = this.view;
      }

      Canvas.prototype.resize = function() {
        var p, windowSize;
        windowSize = new Point(this.$window.width() - 4, this.$window.height() - 4);
        this.view.setViewSize(windowSize);
        this.zoom = windowSize.x / (this.path.end - this.path.start);
        this.view.setCenter(new Point((this.path.end + this.path.start) * this.zoom / 2, this.zoom + 10 - (windowSize.y / 2)));
        this.ceiling = this.view.getBounds().y;
        this.drawPath.removeSegments();
        this.drawPath.addSegments((function() {
          var _i, _len, _ref, _results;
          _ref = this.path.getPoints();
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            p = _ref[_i];
            _results.push(p.multiply(new Point(this.zoom, -this.zoom)));
          }
          return _results;
        }).call(this));
        return this.draw();
      };

      Canvas.prototype.draw = function() {
        var flyer, pos, _i, _len, _ref, _results;
        _ref = this.flyers;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          flyer = _ref[_i];
          pos = flyer.pos.multiply(new Point(this.zoom, -this.zoom));
          if (pos.y < this.ceiling) {
            flyer.vel.y = -flyer.vel.y;
          }
          _results.push(flyer.drawPath.setPosition(pos));
        }
        return _results;
      };

      return Canvas;

    })();
  });

}).call(this);
